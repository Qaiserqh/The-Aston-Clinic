{"ast":null,"code":"var _jsxFileName = \"/Users/qaiser/Desktop/the-aston-clinic/src/screens/BookingScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BookingScreen(_ref) {\n  _s();\n\n  let {\n    match\n  } = _ref;\n  const [loading, setloading] = useState();\n  const [error, seterror] = useState();\n  const [treatments, settreatment] = useState();\n  useEffect(async () => {\n    try {\n      setloading(true);\n      const data = (await axios.post('/api/treatments/gettreatmentbyid')).data;\n      settreatment(data);\n      setloading(false);\n    } catch (error) {\n      setloading(false);\n      seterror(true);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"BookingScreen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"treatments = \", match.params.treatmentsid]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BookingScreen, \"uT1USE2OiqPeEYNcim+hpKCTDkQ=\");\n\n_c = BookingScreen;\nexport default BookingScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookingScreen\");","map":{"version":3,"names":["React","useState","useEffect","BookingScreen","match","loading","setloading","error","seterror","treatments","settreatment","data","axios","post","params","treatmentsid"],"sources":["/Users/qaiser/Desktop/the-aston-clinic/src/screens/BookingScreen.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\n\nfunction BookingScreen({match}) {\n  const [loading, setloading] = useState();\n  const [error, seterror] = useState();\n  const [treatments, settreatment] = useState();\n  useEffect(async() => {\n\n    try {\n      setloading(true)\n      const data  = (await axios.post('/api/treatments/gettreatmentbyid')).data\n\n      settreatment(data)\n      setloading(false)\n    } catch (error) {\n      setloading(false)\n      seterror(true)\n    }\n\n  }, [])\n  return (\n    <div>\n    <h1>BookingScreen</h1>\n    <h1>treatments = {match.params.treatmentsid}</h1>\n    </div>\n  )\n}\n\nexport default BookingScreen"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAEA,SAASC,aAAT,OAAgC;EAAA;;EAAA,IAAT;IAACC;EAAD,CAAS;EAC9B,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,EAAtC;EACA,MAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,EAAlC;EACA,MAAM,CAACQ,UAAD,EAAaC,YAAb,IAA6BT,QAAQ,EAA3C;EACAC,SAAS,CAAC,YAAW;IAEnB,IAAI;MACFI,UAAU,CAAC,IAAD,CAAV;MACA,MAAMK,IAAI,GAAI,CAAC,MAAMC,KAAK,CAACC,IAAN,CAAW,kCAAX,CAAP,EAAuDF,IAArE;MAEAD,YAAY,CAACC,IAAD,CAAZ;MACAL,UAAU,CAAC,KAAD,CAAV;IACD,CAND,CAME,OAAOC,KAAP,EAAc;MACdD,UAAU,CAAC,KAAD,CAAV;MACAE,QAAQ,CAAC,IAAD,CAAR;IACD;EAEF,CAbQ,EAaN,EAbM,CAAT;EAcA,oBACE;IAAA,wBACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAEA;MAAA,4BAAkBJ,KAAK,CAACU,MAAN,CAAaC,YAA/B;IAAA;MAAA;MAAA;MAAA;IAAA,QAFA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GAxBQZ,a;;KAAAA,a;AA0BT,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}